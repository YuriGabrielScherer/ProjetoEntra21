package acao;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import beans.Usuario;
import dados.Dados;

public class Acao {

	// Metodos CRUD

	// Metodo Cadastrar
	public void cadastrarUsuario(Usuario user) {

		// Realizando o cadastro
		if (nomeDuplicado(user.getNome()) == true) {
			Dados.vetorUsuario.add(user);
		} else {
			JOptionPane.showMessageDialog(null, "Usuário com nome duplicado, tente novamente!");
		}

	}

	// Metodo Read
	public DefaultTableModel readUsuario() {

		// Instanciando Classe
		DefaultTableModel modelo = new DefaultTableModel();

		// Add Colunas
		modelo.addColumn("Nome");
		modelo.addColumn("Idade");
		modelo.addColumn("Altura");
		modelo.addColumn("Peso");
		modelo.addColumn("IMC");

		// Add Linhas
		for (int i = 0; i < (Dados.vetorUsuario.size()); i++) {
			modelo.addRow(new Object[] { // -----
					Dados.vetorUsuario.get(i).getNome(), // -----
					Dados.vetorUsuario.get(i).getIdade(), // -----
					Dados.vetorUsuario.get(i).getAltura(), // -----
					Dados.vetorUsuario.get(i).getPeso(), // -----
					Dados.vetorUsuario.get(i).getImc(), // -----

			});
		} // Fech. For

		// Retornando o Modelo
		return modelo;
	}

	// ------
	// Realizar Verificacoes
	// ------

	private boolean nomeDuplicado(String nomeNovo) {

		// Variavel
		boolean ver = true;

		// Realizando a busca
		for (int i = 0; i < (Dados.vetorUsuario.size()); i++) {

			// Verificando a duplicidade de Nomes
			if (nomeNovo.equalsIgnoreCase(Dados.vetorUsuario.get(i).getNome())) {
				ver = false;
				break;
			}

		}

		// Retornando valor
		return ver;

	}

}
